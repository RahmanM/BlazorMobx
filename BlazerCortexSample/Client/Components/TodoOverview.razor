@using  BlazerCortexSample.Client.Store
@using BlazerCortexSample.Client.Models

@attribute [Observer]

@inject TodoStore TodoStore
@inject ViewStore ViewStore


@if (TodoStore.Todos.Count > 0)
{
    <!-- This section should be hidden by default and shown when there are todos -->
<section class="main">
    <input id="toggle-all" class="" type="checkbox" @onchange="ToggleAll" checked="@(this.TodoStore.ActiveCount == 0)" />
    <label for="toggle-all">Mark all as complete</label>
    <ul class="todo-list">
        <!-- These are here just to show the structure of the list items -->
        <!-- List items should get the class `editing` when editing and `completed` when marked as completed -->
        @foreach (var todo in this.Todos)
        {
            <TodoItem @key="todo.Id" Todo="todo" />
        }
    </ul>

</section>
}

@code
{
    [Parameter]
    public List<Todo> Todos { get; set; }


    /// <summary>
    /// Event handler for the toggle-all checkbox.
    /// </summary>
    /// <param name="args">The change event args.</param>
    void ToggleAll(ChangeEventArgs args)
    {
        this.TodoStore.ToggleAll((bool)args.Value);
    }
}